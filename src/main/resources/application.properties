server.port=8080
spring.application.name=my-springboot-app
spring.main.banner-mode=console
logging.level.root=INFO

# Neon PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://ep-dawn-moon-a1foa099-pooler.ap-southeast-1.aws.neon.tech:5432/ordering_system?sslmode=require
spring.datasource.username=ordering_system_owner
spring.datasource.password=npg_GzWNa7DAg1Qf
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.properties.hibernate.type.wrapper_array_handling=DISALLOW

# Connection Pool Configuration for Cloud Database
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# SSL Configuration for Neon
spring.datasource.hikari.data-source-properties.ssl=true
spring.datasource.hikari.data-source-properties.sslmode=require

# Initialize database with sample data - disabled for cloud database
spring.sql.init.mode=never
spring.jpa.defer-datasource-initialization=false

# SQL scripts configuration - disabled for cloud database
# spring.sql.init.schema-locations=classpath:schema.sql
# spring.sql.init.data-locations=classpath:data.sql,classpath:migration-add-user-role.sql,classpath:migration-add-payment-columns.sql

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=true